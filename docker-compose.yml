version: '3'

networks:
  kafka-network:
    name: kafka-network
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.19.0.0/16

services:
  kafka-zookeeper:
    image: kafka-zookeeper
    build:
      context: ./kafka
      dockerfile: kafka.Dockerfile
    container_name: kafka-zookeeper
    networks:
      kafka-network:
        ipv4_address: 172.19.0.2
    command:
      [
        "sh",
        "-c",
        "bin/zookeeper-server-start.sh config/zookeeper.properties"
      ]
    ports:
      - 2888:2888
    restart: always

  kafka:
    image: kafka
    build:
      context: ./kafka
      dockerfile: kafka.Dockerfile
    container_name: kafka
    depends_on:
      - kafka-zookeeper
    networks:
      kafka-network:
        ipv4_address: 172.19.0.3
    ports:
      - 9092:9092
    restart: always
    command:
      [
        "sh",
        "-c",
        "bin/kafka-server-start.sh config/server.properties"
      ]

  topic-create:
    image: topic-create
    build:
      context: ./kafka
      dockerfile: kafka.Dockerfile
    container_name: topic-create
    depends_on:
      - kafka
    networks:
      kafka-network:
        ipv4_address: 172.19.0.4
    restart: 'no'
    command:
      [
        "sh",
        "-c",
        "bin/kafka-topics.sh --create --topic test-topic --bootstrap-server 172.19.0.3:9092"
      ]

  kafka-producer:
    image: kafka-producer
    build:
      context: ./console-producer
      dockerfile: producer.Dockerfile
    container_name: kafka-producer
    depends_on:
      - kafka
    networks:
      kafka-network:
        ipv4_address: 172.19.0.12
    restart: 'no'

  kafka-consumer:
    image: kafka-consumer
    build:
      context: ./console-consumer
      dockerfile: consumer.Dockerfile
    container_name: kafka-consumer
    depends_on:
      - kafka
    networks:
      kafka-network:
        ipv4_address: 172.19.0.13
    restart: 'no'

  spark-consumer:
    image: spark-consumer
    build:
      context: ./spark-consumer
      dockerfile: spark-consumer.Dockerfile
    container_name: spark-consumer
    networks:
      kafka-network:
        ipv4_address: 172.19.0.14
    depends_on:
      - kafka
